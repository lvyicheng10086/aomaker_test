{"uid":"a0ca43ca4dcef9a6","name":"test_case_get_by_token[100707f7-5987-4504-8e0e-e1388ded29c8]","fullName":"testcases.test_api.test_get_by_token#test_case_get_by_token","historyId":"9d1a360e49affc02dbbf14deda018e3a","time":{"start":1743500973103,"stop":1743500973538,"duration":435},"status":"broken","statusMessage":"ValueError: 无法在流式响应上直接调用json()方法，请使用iter_json()代替","statusTrace":"token = '100707f7-5987-4504-8e0e-e1388ded29c8'\n\n    @pytest.mark.mock_api\n    @pytest.mark.parametrize(\"token\", [token])\n    def test_case_get_by_token(token):\n        query_params = PostGetByTokenAPI.RequestBodyModel(token=token)\n>       resp = PostGetByTokenAPI(request_body=query_params).send()\n\ntestcases\\test_api\\test_get_by_token.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\api_object.py:80: in send\n    cached_response = self.http_client.send_request(\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\http_client.py:64: in send_request\n    return call_next(merged_request)\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\middlewares\\logging_middleware.py:77: in structured_logging_middleware\n    log_data.response = _parse_response(response)\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\middlewares\\logging_middleware.py:95: in _parse_response\n    \"response_body\": _parse_response_body(response)\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\middlewares\\logging_middleware.py:106: in _parse_response_body\n    return response.json()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <aomaker.core.http_client.CachedResponse object at 0x0000025B0ADE8710>\nkwargs = {}\n\n    def json(self, **kwargs) -> Any:\n        if self._is_streaming:\n>           raise ValueError(\"无法在流式响应上直接调用json()方法，请使用iter_json()代替\")\nE           ValueError: 无法在流式响应上直接调用json()方法，请使用iter_json()代替\n\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\http_client.py:29: ValueError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[],"testStage":{"status":"broken","statusMessage":"ValueError: 无法在流式响应上直接调用json()方法，请使用iter_json()代替","statusTrace":"token = '100707f7-5987-4504-8e0e-e1388ded29c8'\n\n    @pytest.mark.mock_api\n    @pytest.mark.parametrize(\"token\", [token])\n    def test_case_get_by_token(token):\n        query_params = PostGetByTokenAPI.RequestBodyModel(token=token)\n>       resp = PostGetByTokenAPI(request_body=query_params).send()\n\ntestcases\\test_api\\test_get_by_token.py:19: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\api_object.py:80: in send\n    cached_response = self.http_client.send_request(\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\http_client.py:64: in send_request\n    return call_next(merged_request)\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\middlewares\\logging_middleware.py:77: in structured_logging_middleware\n    log_data.response = _parse_response(response)\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\middlewares\\logging_middleware.py:95: in _parse_response\n    \"response_body\": _parse_response_body(response)\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\middlewares\\logging_middleware.py:106: in _parse_response_body\n    return response.json()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <aomaker.core.http_client.CachedResponse object at 0x0000025B0ADE8710>\nkwargs = {}\n\n    def json(self, **kwargs) -> Any:\n        if self._is_streaming:\n>           raise ValueError(\"无法在流式响应上直接调用json()方法，请使用iter_json()代替\")\nE           ValueError: 无法在流式响应上直接调用json()方法，请使用iter_json()代替\n\nD:\\app\\anaconda3\\envs\\aomaker_new\\Lib\\site-packages\\aomaker\\core\\http_client.py:29: ValueError","steps":[],"attachments":[{"uid":"9555be872644d052","name":"PostGetByTokenAPI","source":"9555be872644d052.json","type":"application/json","size":298},{"uid":"b1b64a14889f086f","name":"log","source":"b1b64a14889f086f.txt","type":"text/plain","size":748}],"parameters":[],"stepsCount":0,"hasContent":true,"attachmentStep":false,"attachmentsCount":2,"shouldDisplayMessage":true},"afterStages":[],"labels":[{"name":"tag","value":"mock_api"},{"name":"parentSuite","value":"testcases.test_api"},{"name":"suite","value":"test_get_by_token"},{"name":"host","value":"mybook"},{"name":"thread","value":"21076-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.test_api.test_get_by_token"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"token","value":"'100707f7-5987-4504-8e0e-e1388ded29c8'"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["mock_api"]},"source":"a0ca43ca4dcef9a6.json","parameterValues":["'100707f7-5987-4504-8e0e-e1388ded29c8'"]}